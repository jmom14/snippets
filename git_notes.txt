HEAD: Puntero que apunta a el commit que tenemos en revision

git config --global user.name "John Doe"
git config --global user.email johndoe@example.com

## Global
git config --global --edit

git intit 
gid add .
git commit -m "mensaje"
git remote add origin https://github.com/jmom14/SQL-SNIPPETS.git
git push origin master

git checkout "branch"
git checkout -b "branch" //Crear y cambiar rama
git branch //see the current branch
git push origin --delete "branch"

## Remove local branch
git branch -d "branch"
git branch -D <branch-name>

## Compare branches 
git diff HEAD~1 HEAD

## Remove remote branch
git push origin --delete <remote-branch-name>

##show commits in one line
git log --online --decorate
git revert "hash-id-commit"

## revert many comments
git revert --no-commit "hash-id-commit"
git revert -m 1 <commit-hash> //for merge commits

## revert HEAD
git revert --no-commit HEAD
git revert --no-commit HEAD~1
git revert --continue

##reset commit
git reset f5f0388

##reset hard
git reset --hard f4f0388

##reset soft 
git reset --soft f4f0388

# update submodules 
git sobmodule update --remote --recursive

# pull, fetch and udpate of all submodules
git pull --recurse-submodules

git checkout origin/master filename.tsx

#reset head with remote
git fetch origin
git reset --hard origin/master

#reset head with origin
git fetch origin
git reset --hard origin/master

#clean all files
git clean -df

#Add changes to a commit
git add the_left_out_file
git commit --amend --no-edit

# Squash commits when merging
git merge --squash feature-branch
git commit -m "Merge commit"

# It will retrieve the commmits from feature branch and apply them into master branch
git rebase feature
